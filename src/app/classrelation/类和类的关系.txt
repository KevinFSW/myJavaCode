类和类的关系
    A is-a B     泛化（继承  实现（后面讲））单继承，多实现
    A has-a B    包含（组合  聚合  关联）
    A use-a B    依赖（need-a）

    一、继承
        子类   父类

        1，子类 继承（extend） 父类
        2，子类的对象可以调用父类的（public protected）属性和方法，当作自己的来用
        3，子类可以添加自己独有的属性和方法
        4，子类可以重写（看情况）父类的方法
            子类的权限可以大于父类
            父类方法是final  子类不能重写
            父类方法是static 子类不存在重写的说法
            父类方法是abstract 子类必须重写，否则子类也得是抽象类

            返回值 子类可以小于父类
            方法名 子类必须与父类一致
            参数   子类必须与父类一致
            异常   编译时  运行时
                如果父类抛出运行时   子类可以不理会
                如果父类抛出编译时
                    子类抛出的个数要少于等于父类
                    子类抛出的类型要小于等于父类

        5，每个类都有继承类，如果不写extend，默认继承Object类，否则继承extend后面的类，Object类是所有引用类型的父类，Object类没有父类
        6，Java中继承的单个存在的（单继承），每个类只能extend一个类，可以通过传递实现继承多个类
        7，继承的内存形式
        8，this和super。都是指代词，代替的是对象，都能调用一般属性和一般方法，放在类成员的任意位置：
            this，指代当前执行方法的那个对象。不一定是当前类
            super指代当前执行方法时的对象的父类对象，空间内部的那个
            this和super可以放置在类成员的任意位置（属性  方法  构造方法  块）

            当this和super调用构造方法时，他们不能同时出现，因为他们调用构造方法时都需要放在构造方法的第一行

            构造方法严格来说不是子类继承过来的，只是单纯在子类调用构造方法的时候默认调用父类的构造方法
            程序块也类似。子类的构造方法调用父类的构造方法时会先执行父类的程序块

    二、包含（组合，聚合，关联）
        从亲密程度分：
        组合--->人和大脑  人和心脏  整体和部分的关系，存在则一起存在，消亡时一起消亡
        聚合--->汽车和轮子  整体和部分的关系  创建时可能是分开的
        关联--->人有汽车  整体和部分的关系  可以分割  后来才组合在一起

        从Java程序的角度来说，是一个类当作另一个类的属性来存储

        高内聚低耦合  耦合度：继承（实现）> 组合 > 聚合 > 关联 > 依赖

    三、依赖

    四、包
        包可以理解为文件夹，package，写在类的第一行，只能有一个，告知我的类在哪
        import用来导入别人的包，可以有多个