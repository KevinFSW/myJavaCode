数组（引用数据类型）

数组的定义
    数据类型[] 数组名字
    int[] x;
    char[] y;
    String[] m;
    
    int[] x;
    int x[];
    int []x;
    以上写法都是正确的。
    
数组初始化
    静态初始化
        int[] array = new int[]{10,20,30,40,50};
        int[] array = {1,2,3,4,5};
        数组索引溢出可以编译，但是运行会报异常ArrayIndexOutOfBoundsException 
        JDK1.5之后新增增强for循环
        for(int value:array){}.//只能读取，不能写入
    动态初始化  
        有长度，没元素(有默认值，整型 0，浮点0.0，boolean false，引用数据类型null，)
        int[] array = new int[5];//长度不正常也能编译，运行时会报异常

    数组的名字是个变量，用于存储数组的引用（地址），数组的实际数据存储在堆内存中，通过new在堆内存中开辟空间存放数组元素

    如果变量空间存储的是基本数据类型，存储的是值
    如果变量空间存储的是引用数据类型，存储的是引用（类似于C语言的地址，但实际不是地址）
    
    练习
    1，两个数组的值对应互换
    2，一个数组的头尾值互换
    3，计算数组平均值
    4，寻找数组的最大最小值
    5，合并两个数组；按照素组中的最大值分割数组
    6，去掉数组的0元素
    7，数组排序
    8，用户登录认证


多维数组

二维数组
    定义
        int[][] x = {{0,0},{9,9}};
        int[][] x = new int[2][];//能编译，运行能初始化，但是往数组填值会报异常NullPointerException 
    
    初始化
    
    
    常见运行时异常
    1，inputmismatchexception 输入类型不匹配
    2，arrayindexout ofboundsexception 数组索引越界面
    3，negativearraysizeexception 数组长度不合法，长度出现负数
    4，Nullpointerexception 空指针异常，二维数组的第二个长度不填，并且还去使用

    利用二维数组实现用户登录






